<!DOCTYPE html [
    <!ENTITY nbsp "&#160;"> 
    ]>
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:p="http://primefaces.org/ui">

    <div id="divGenerale">


        <div class="contenuTerme">
            <div id="imageEdition">
                                   
                <h:form id="formEditTInfo" rendered="#{(currentUser.user != null) and (selectedTerme.idC != null) and
                                                       (roleOnTheso.isAdminOnThisTheso || currentUser.user.isSuperAdmin || roleOnTheso.isManagerOnThisTheso)
                                                       and (selectedTerme.idDomaine != 'Orphan')}">

                    
                    <p:commandButton id="cbEditThesoTInfo" styleClass="cbEdit" icon="ui-icon-edit-16" update=":idGpsEditDlg"/>
                    <p:menu style="background: #CEF0C4" overlay="true" trigger="cbEditThesoTInfo" my="left top" at="left bottom">
                       
                        <p:menuitem rendered="#{selectedTerme.status == 'hidden' and !newtreeBean.isGroup() and !newtreeBean.isSubGroup()}" 
                                    action="#{newtreeBean.reactivConcept()}" value="#{langueBean.getMsg('index.btnReacCpt')}"
                                    update=":accordeonTree,:panContenu,:contenuDroite1,:contenuDroite2,:contenuDroite3" style="font-size: 12px;"/>                        
                        
                        <p:menuitem rendered="#{selectedTerme.status != 'hidden' and !newtreeBean.isGroup() and !newtreeBean.isSubGroup()}"
                                    action="#{newtreeBean.init()}" value="#{langueBean.getMsg('edit.rename')}" update=":idConceptEditDlg"
                                    oncomplete="PF('conceptEditDlg').show();" style="font-size: 12px;"/>
                        
                        <p:menuitem rendered="#{selectedTerme.status != 'hidden' and newtreeBean.isGroup() or newtreeBean.isSubGroup() }"
                                    value="#{langueBean.getMsg('edit.rename')}" update=":idRenameGroupDlg" oncomplete="PF('renameGroupDlg').show();" style="font-size: 12px;"/>
                        
                        <p:menuitem rendered="#{!newtreeBean.isGroup() and !newtreeBean.isSubGroup() and !newtreeBean.isHaveChildren()}"
                                    value="#{langueBean.getMsg('edit.delete')}" update=":idConceptDeleteDlg" oncomplete="PF('conceptDeleteDlg').show();" style="font-size: 12px;"/>                        
                        <p:separator/>
                        
                        <p:menuitem rendered="#{!newtreeBean.isGroup() and !newtreeBean.isSubGroup()}"
                                    value="#{langueBean.getMsg('concept.addToCollection')}"
                                    action="#{autoComp.initVariables()}" update=":idAddConceptToGroup"
                                    oncomplete="PF('addConceptToGroup').show();" style="font-size: 12px;"/> 
                        <p:menuitem rendered="#{!newtreeBean.isGroup() and !newtreeBean.isSubGroup() and (!selectedTerme.selectedNode.isOrphan)}"
                                    value="#{langueBean.getMsg('concept.removeFromCollection')}"
                                    update=":idRemoveConceptFromGroup"
                                    oncomplete="PF('removeConceptFromGroup').show();" style="font-size: 12px;"/>                         
                        <p:separator/>

                        <p:menuitem rendered="#{(selectedTerme.idDomaine != 'Orphan')}"
                                    value="Couper/déplacer" title="déplacer le concept ou la branche" 
                                    update=":messages" actionListener="#{copyAndPaste.copy(newtreeBean.selectedNode, selectedTerme.nom)}" style="font-size: 12px;"/>                           
                        
                        <p:menuitem rendered="#{copyAndPaste.isCopyOn and selectedTerme.idDomaine != 'Orphan'}" value="Coller ici: #{copyAndPaste.conceptValueToCopy}" 
                                    title="coller ici la branche qui a été copié"

                                    action="#{newtreeBean.onDragDropByCopy(copyAndPaste.draggedNode, newtreeBean.selectedNode)}"
                                    oncomplete="PF('confirmDrag').show()" update=":confirmDialogDrag, :messages"
                                    style="font-size: 12px;"/>    
                        <p:separator/>                        
                        
                        <p:menuitem  rendered="#{!newtreeBean.isGroup() and !newtreeBean.isSubGroup() and newtreeBean.isHaveChildren()}"
                                    value="#{langueBean.getMsg('concept.deleteAll')}" style="font-size: 12px;" update=":idConceptDeleteBranch" oncomplete="PF('conceptDeleteBranch').show();"/>
                      
                        <p:separator/>
                        
                        
                        <p:menuitem rendered="#{selectedTerme.type != 1}" value="#{langueBean.getMsg('editNotation')}" update=":idNotationEditDlg" 
                                    oncomplete="PF('notationEditDlg').show();" style="font-size: 12px;"/>
                        <p:menuitem rendered="#{selectedTerme.type != 1}" value="#{langueBean.getMsg('index.histo')}" onclick="PF('dlgHisto').show();" style="font-size: 12px;"/>


                        <p:menuitem rendered="#{selectedTerme.type != 1 and selectedTerme.status != 'hidden'}" value="#{langueBean.getMsg('index.depreciateCpt')}"
                                    onclick="PF('conceptDeprecateDlg').show();" style="font-size: 12px;"/>
                        <p:menuitem rendered="#{selectedTerme.type != 1 and selectedTerme.status != 'hidden'}" value="#{langueBean.getMsg('index.fusion')}" 
                                    onclick="PF('conceptFusionDlg').show();" style="font-size: 12px;"/>
                        <p:menuitem rendered="#{selectedTerme.type != 1 }" value="#{langueBean.getMsg('concept.setId')}" onclick="PF('reGenerateConceptIdDlg').show();" style="font-size: 12px;"/>
                        
                        <p:menuitem rendered="#{selectedTerme.type != 1 }" value="#{langueBean.getMsg('concept.setIdArk')}" onclick="PF('reGenerateConceptArkIdDlg').show();" style="font-size: 12px;"/>
                        

                        <p:menuitem rendered="#{newtreeBean.isGroup() and !newtreeBean.haveSubGroup() and selectedTerme.termesSpecifique.size() == 0}" 
                                    value="#{langueBean.getMsg('index.delGroup')}" 
                                    actionListener="#{newtreeBean.delGroup(
                                                      newtreeBean.selectedMyTreeNode.idCurrentGroup,
                                                      newtreeBean.selectedMyTreeNode.idTheso,
                                                      selectedTerme.idHandle,
                                                      currentUser.user.idUser)}" 
                                    update=":panContenu,:accordeonTree" style="font-size: 12px;" />
                        <p:menuitem rendered="#{newtreeBean.isSubGroup() and !newtreeBean.haveSubGroup() and selectedTerme.termesSpecifique.size() == 0}" 
                                    value="#{langueBean.getMsg('index.delGroup')}"
                                    actionListener="#{newtreeBean.delGroup(
                                                      newtreeBean.selectedMyTreeNode.idCurrentGroup,
                                                      newtreeBean.selectedMyTreeNode.idTheso,
                                                      selectedTerme.idHandle,
                                                      currentUser.user.idUser)}" 
                                    update=":panContenu,:accordeonTree" style="font-size: 12px;" />
                        <p:menuitem rendered="#{newtreeBean.isGroup()}" value="#{langueBean.getMsg('group.modifType')}" 
                                    oncomplete="PF('modifTypeGroupDlg').show()" actionListener="#{addGroup.init()}" 
                                    style="font-size: 12px;" update=":idModifTypeGroupDlg"/>
                        <p:menuitem rendered="#{newtreeBean.isSubGroup()}" 
                                    actionListener="#{groupManager.init()}"
                                    value="#{langueBean.getMsg('numerotation.header')}" oncomplete="PF('groupNotationDlg').show()" style="font-size: 12px;"
                                    update=":idGroupNotationDlg, :accordeonTree" />
                        <p:menuitem rendered="#{newtreeBean.isGroup()}"  
                                    actionListener="#{groupManager.init()}"
                                    value="#{langueBean.getMsg('numerotation.header2')}" oncomplete="PF('groupNotationDlg').show()" style="font-size: 12px;" 
                                    update=":idGroupNotationDlg, :accordeonTree" />
                        <p:menuitem rendered="#{newtreeBean.isGroup() or newtreeBean.isSubGroup()}"
                                     value="#{langueBean.getMsg('concept.setIdArk')}" onclick="PF('reGenerateGroupArkIdDlg').show();" style="font-size: 12px;"/>
                        

                        <p:submenu rendered="#{newtreeBean.isGroup() or newtreeBean.isSubGroup()}"  label="" styleClass="cbSeparateMenu">
                            <p:menuitem value="#{langueBean.getMsg('group.deleteAll')}" style="font-size: 12px;" update=":idGroupDelete" oncomplete="PF('groupDelete').show();"/>
                        </p:submenu>
                        
                        


                        
                        
                        <p:submenu rendered="#{(selectedTerme.type != 1) }"  label="#{langueBean.getMsg('edit.import')}" styleClass="cbSeparateMenu">
                            <p:menuitem value="#{langueBean.getMsg('concept')}" style="font-size: 12px;" update=":idImportSingleConceptDlg" oncomplete="PF('importSingleConceptDlg').show();"/>
                            <p:menuitem value="#{langueBean.getMsg('alig.bran')}" style="font-size: 12px;" update=":idImportBranchDlg" oncomplete="PF('importBranchDlg').show();"/>
                        </p:submenu>

                    </p:menu>
                </h:form>
                <h:form id="reloadTree" rendered="#{(selectedTerme.idC != null)}">
                    <p:commandButton id="reloadTree" styleClass="cbEdit" icon="ui-icon-tree2-24" actionListener="#{newtreeBean.reloadTree()}" 
                            title="Se replacer dans l'arbre" update=":accordeonTree,:panContenu" oncomplete="srollToSelected()"/>

                </h:form>                 
                <!--options pour les orphelins -->
                <h:form id="formEditTInfoOrphan" rendered="#{(currentUser.user != null) and (selectedTerme.idC != null) and
                                                       (roleOnTheso.isAdminOnThisTheso || currentUser.user.isSuperAdmin || roleOnTheso.isManagerOnThisTheso)
                                                       and (selectedTerme.idDomaine == 'Orphan')}">
                    <p:commandButton id="cbEditThesoTInfo" styleClass="cbEdit" icon="ui-icon-edit-16" />
                    <p:menu style="background: #CEF0C4" overlay="true" trigger="cbEditThesoTInfo" my="left top" at="left bottom">
                        <p:menuitem rendered="#{selectedTerme.status != 'hidden'}" value="#{langueBean.getMsg('btnEdit')}" actionListener="#{vue.setAddTInfo(1)}" update=":panPopUp" style="font-size: 12px;"/>
                        <p:menuitem rendered="#{selectedTerme.idDomaine == 'Orphan'}" value="#{langueBean.getMsg('index.delOrphan')}"
                                    
                                    update=":idDeleteBranchOrphan" oncomplete="PF('deleteBranchOrphan').show();"
                                     style="font-size: 12px;"/>

                        <p:menuitem rendered="#{(selectedTerme.type == 3) }" value="#{langueBean.getMsg('panel.moveBranche')}" update=":idMoveBranchFromOrphanDlg" oncomplete="PF('moveBranchFromOrphanDlg').show();" style="font-size: 12px;"/>

                        <p:menuitem rendered="#{(selectedTerme.type == 3) }"   value="#{langueBean.getMsg('panel.addToMT')}" update=":idMoveBranchFromOrphanToGroupDlg" oncomplete="PF('moveBranchFromOrphanToGroupDlg').show();" style="font-size: 12px;"/>
                    </p:menu>
                </h:form>
            </div>

            <h:panelGroup rendered="#{(selectedTerme.idC != null)}" >
                <span style="font-size: 17px; font-weight: bold;">
                    <h:outputText title="#{selectedTerme.idC}" id="nom" value="#{selectedTerme.nom}" styleClass="textInfoTitle"/><br/>
                </span>
                <h:panelGroup rendered= "#{(roleOnTheso.nodePreference.z3950actif) or (roleOnTheso.nodePreference.bddActive)}">
                    

                    <a href="#{selectedTerme.urlNotice}" target="blanc"  >
                        <h:outputText rendered="#{(roleOnTheso.nodePreference.bddUseId)}" value="#{langueBean.getMsg('index.notice')}" />   
                        <h:outputText rendered="#{(!roleOnTheso.nodePreference.bddUseId)}" id="nbNoti1" value="notices liées &lt;br/&gt;" escape="false" styleClass="textLink" />
                        <h:outputText rendered="#{(roleOnTheso.nodePreference.bddUseId)}" id="nbNoti2" value=" #{selectedTerme.nbNotices} &lt;br/&gt;" escape="false" styleClass="textLink" />
                    </a>

                </h:panelGroup>
                <h:outputText id="idC" value="id : "/>
                <h:outputText value ="#{selectedTerme.idC}" styleClass="textInfo"/>

                <br/>
                <h:outputText rendered="#{(selectedTerme.idArk != null) and (selectedTerme.idArk != '') }" id="idArk" value="ark: "/>
                <h:outputText rendered="#{(selectedTerme.idArk != null) and (selectedTerme.idArk != '') }" value ="#{selectedTerme.idArk}&lt;br/&gt;" escape="false" styleClass="textInfo"/>
                
                <h:outputText rendered="#{(selectedTerme.idHandle != null) and (selectedTerme.idHandle != '') }" id="idHandle" value="handle: "/>
                <h:outputText rendered="#{(selectedTerme.idHandle != null) and (selectedTerme.idHandle != '') }" value ="#{selectedTerme.idHandle}&lt;br/&gt;" escape="false" styleClass="textInfo"/>                
                
                <h:outputText rendered="#{(selectedTerme.notation != '')}" value="notation : "/>
                <h:outputText rendered="#{(selectedTerme.notation != '')}" value = "#{selectedTerme.notation} &lt;br/&gt;" escape="false" styleClass="textInfo" />                
                
                <h:outputText value="#{langueBean.getMsg('index.MT')}" />  : 
                <h:outputText id="mTheso" value="#{selectedTerme.microTheso}" styleClass="textInfo"/><br/>
                
                <p:accordionPanel styleClass="accordionMenu" activeIndex="-2">

                    <p:tab title="..."    titleStyleClass="titleAccordion">
                         <h:outputText value="#{langueBean.getMsg('index.dateC')}" />  : 
                        <h:outputText id="dateC" value="#{selectedTerme.dateC}" styleClass="textInfo"/><br/>
                        <span>
                            <h:outputText value="#{langueBean.getMsg('index.dateE')}" />  : 
                            <h:outputText id="dateM" value="#{selectedTerme.dateM}" styleClass="textInfo"/><br/>
                        </span>
                        <h:outputText rendered="#{selectedTerme.creatorName != ''}" value="#{langueBean.getMsg('index.creator')} : "/>
                        <h:outputText rendered="#{selectedTerme.creatorName != ''}" value = "#{selectedTerme.creatorName} &lt;br/&gt;" escape="false" styleClass="textInfo"/>

                        <h:outputText rendered="#{selectedTerme.contributorName != ''}" value="#{langueBean.getMsg('index.contributor')} : "/>
                        <h:outputText rendered="#{selectedTerme.contributorName != ''}" value = "#{selectedTerme.contributorName} &lt;br/&gt;" escape="false" styleClass="textInfo"/>                        
                    </p:tab>
                </p:accordionPanel >

                <h:panelGroup rendered="#{selectedTerme.idC != null and selectedTerme.fusions.size() > 0}">
                    <ui:repeat value="#{selectedTerme.fusions}" var="fu" >
                        <h:outputText rendered="#{fu.idConcept1 == selectedTerme.idC}" value="#{langueBean.getMsg('index.deprec1')} #{fu.lexicalValue2} &lt;br/&gt;" escape="false" />
                        <h:outputText rendered="#{fu.idConcept2 == selectedTerme.idC}" value="#{langueBean.getMsg('index.deprec2')} #{fu.lexicalValue1} &lt;br/&gt;" escape="false" />
                    </ui:repeat>
                </h:panelGroup>
                <!-- affichage du nombre total des fils -->
                <h:panelGroup id="totalBrancheG">
                    <h:form>

                        <p:commandButton title="#{langueBean.getMsg('index.totalOfConcepts')}" value="#{selectedTerme.totalConceptOfBranch}" 
                                         id="ajaxddd" update=":totalBrancheG" actionListener="#{selectedTerme.getTheNbConceptOfBranch()}" styleClass="termInfo" />
                    </h:form>
                </h:panelGroup>


                <!-- affichage du nombre total des notices de la branche -->
                <h:panelGroup id="totalNoticesG" rendered="#{roleOnTheso.nodePreference.z3950actif}">
                    <h:form>
                        <p:commandButton  value="#{selectedTerme.totalNoticesOfBranch}" 
                                          id="ajaxdddn" update=":totalNoticesG" actionListener="#{selectedTerme.getNbNoticesOfBranch()}" styleClass="termInfo" />
                    </h:form>
                </h:panelGroup>

                <!-- affichage de l'URL pérenne-->
                <h:form>
                    <p:commandButton id="urlPerenne" styleClass="termInfo"  value="#{langueBean.getMsg('index.link')}" />
                    <p:overlayPanel id="getUrlPerenne" for="urlPerenne" hideEffect="fade">

                        <!-- cas où l'Id Ark est renseigné, alors on affiche l'Id Ark -->
                        <!-- pour afficher un toolTipText-->
                        <!-- <p:tooltip id="toolTipGrow" for="ark" value="{theso.getCheminSite()}{selectedTerme.getLienTerme()}"
                                    showEffect="clip" hideEffect="explode" />
                        -->

                        <span>
                            <h:outputLink rendered="#{(selectedTerme.idArk != null) and (selectedTerme.idArk != '')}"
                                          value="#{roleOnTheso.nodePreference.serveurArk}#{selectedTerme.idArk}" styleClass="linkSmall">
                                <h:outputText rendered="#{(selectedTerme.idArk != null) and (selectedTerme.idArk != '')}"
                                              value="#{roleOnTheso.nodePreference.serveurArk}#{selectedTerme.idArk}" styleClass="linkSmall"/>
                                <h:graphicImage value = "https://ark.mom.fr/ark:/#{selectedTerme.idArk}/qrcode" width="50" height="50"/>
                                <br/>
                            </h:outputLink>
                        </span>
                        <span>
                            <h:outputLink rendered="#{(selectedTerme.idHandle != null) and (selectedTerme.idHandle != '')}"
                                          value="https://hdl.handle.net/#{selectedTerme.idHandle}" styleClass="linkSmall">
                                <h:outputText rendered="#{(selectedTerme.idHandle != null) and (selectedTerme.idHandle != '')}"
                                              value="https://hdl.handle.net/#{selectedTerme.idHandle}" styleClass="linkSmall"/>
                            </h:outputLink>
                        </span>

                        <!-- cas où l'Id Ark est vide, alors on affiche l'URL interne -->
                        <h:outputLink rendered="#{(selectedTerme.idArk == '') and (selectedTerme.idC != null) and (selectedTerme.idC != '')
                                                  and (selectedTerme.idHandle == '')}"
                                      value="#{roleOnTheso.nodePreference.cheminSite}#{selectedTerme.getLienTerme()}" target="blanc" styleClass="linkSmall">
                            <span>
                                <h:outputText rendered="#{(selectedTerme.idArk == '') and (selectedTerme.idC != null) and (selectedTerme.idC != '')}"
                                              value="#{roleOnTheso.nodePreference.cheminSite}#{selectedTerme.getLienTerme()}" styleClass="linkSmall"/>

                            </span>
                        </h:outputLink>                                
                    </p:overlayPanel>
                </h:form>
            </h:panelGroup>      
        </div>
    </div>
</ui:composition>
